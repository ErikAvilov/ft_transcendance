# Generated by Django 4.2.11 on 2024-03-19 09:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='English',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_home', models.CharField(default='Home')),
                ('w_profile', models.CharField(default='Profile Page')),
                ('w_playGame', models.CharField(default='Play the Game')),
                ('w_login', models.CharField(default='Login')),
                ('w_login2', models.CharField(default='Login')),
                ('w_logout', models.CharField(default='Logout')),
                ('w_pongDesc', models.CharField(default='The original pong, but not that much.')),
                ('w_register', models.CharField(default='Register')),
                ('w_account', models.CharField(default='Already have an account ?')),
                ('w_noaccount', models.CharField(default="Don't have an account? Sign up here")),
                ('w_otp_placeholder', models.CharField(default='Enter OTP code if required')),
                ('w_profile_settings', models.CharField(default='Profile settings')),
                ('w_account_settings', models.CharField(default='Account settings')),
                ('w_title', models.CharField(default='SUPER PONG')),
                ('w_forbidden_request', models.CharField(default='Forbidden Request')),
                ('w_unauthorized_access', models.CharField(default='Unauthorized access')),
                ('w_the_pong', models.CharField(default='THE PONG')),
                ('w_ball_color_change', models.CharField(default='Ball Color Change')),
                ('w_manage_tournament', models.CharField(default='Manage Tournament')),
                ('w_loading', models.CharField(default='Loading...')),
                ('w_back_to_profile', models.CharField(default='Back to profile')),
                ('w_submit', models.CharField(default='Submit')),
                ('w_on', models.CharField(default='Yes')),
                ('w_off', models.CharField(default='No')),
                ('w_toggle_tfa', models.CharField(default='Toggle 2FA')),
                ('w_tfa_message', models.CharField(default='Use the Google Authenticator app, scan the QR code and save this code in case you lose access to your app')),
                ('w_insert_code', models.CharField(default='Insert Code')),
                ('w_email', models.CharField(default='Email')),
                ('w_username', models.CharField(default='Username')),
                ('w_cancel_friend_request', models.CharField(default='Cancel Friend Request')),
                ('w_accept_friend_request', models.CharField(default='Accept Friend Request')),
                ('w_send_friend_request', models.CharField(default='Send Friend Request')),
                ('w_cancel', models.CharField(default='Deny')),
                ('w_accept', models.CharField(default='Accept')),
                ('w_friends', models.CharField(default='Friends')),
                ('w_unfriend', models.CharField(default='Remove friend')),
                ('w_find', models.CharField(default='Invite')),
                ('w_search_friend', models.CharField(default='Send friend invite')),
                ('w_friend_requests', models.CharField(default='Friend Requests')),
                ('w_match_history', models.CharField(default='Match History')),
                ('w_date', models.CharField(default='Date')),
                ('w_player', models.CharField(default='Player')),
                ('w_winner', models.CharField(default='Winner')),
                ('w_loser', models.CharField(default='Loser')),
                ('w_wins', models.CharField(default='Wins')),
                ('w_loses', models.CharField(default='Loses')),
                ('w_no_games', models.CharField(default='No Games yet')),
                ('w_tournament', models.CharField(default='Tournament')),
                ('w_tournament_create', models.CharField(default='Create')),
                ('w_tournament_join', models.CharField(default='Join')),
                ('w_tournament_participants', models.CharField(default='Number of participants')),
                ('w_tournament_pass', models.CharField(default='Tournament Password')),
                ('w_tournament_host', models.CharField(default='Host')),
                ('w_tournament_players', models.CharField(default='Participants')),
                ('w_tournament_action', models.CharField(default='Action')),
                ('w_tournament_launch', models.CharField(default='Launch tournament')),
                ('w_tournament_warning', models.CharField(default='The number of participant must be a power of 2 and greater than 3')),
                ('w_game_manager', models.CharField(default='Game manager')),
                ('w_tournament_manager', models.CharField(default='Tournament Manager')),
                ('w_search_player', models.CharField(default='Search player')),
                ('w_request_sent', models.CharField(default='Request sent')),
                ('w_error', models.CharField(default='Request error')),
                ('w_no_friends', models.CharField(default='No friends')),
                ('w_no_results', models.CharField(default='No results')),
            ],
        ),
        migrations.CreateModel(
            name='French',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_home', models.CharField(default="Page d'accueil")),
                ('w_profile', models.CharField(default='Page de profil')),
                ('w_playGame', models.CharField(default='Jouer au jeu')),
                ('w_login', models.CharField(default='Se connecter')),
                ('w_login2', models.CharField(default='Se connecter')),
                ('w_logout', models.CharField(default='Se déconnecter')),
                ('w_pongDesc', models.CharField(default='Le pong original, mais pas trop.')),
                ('w_register', models.CharField(default="S'enregistrer")),
                ('w_account', models.CharField(default='Vous avez déjà un compte ?')),
                ('w_noaccount', models.CharField(default="Vous n'avez pas de compte ? Créez ici")),
                ('w_otp_placeholder', models.CharField(default='Insérez le code secret si nécessaire')),
                ('w_profile_settings', models.CharField(default='Paramètres du profil')),
                ('w_account_settings', models.CharField(default='Paramètres du compte')),
                ('w_title', models.CharField(default='SUPER PONG')),
                ('w_forbidden_request', models.CharField(default='Requête interdite')),
                ('w_unauthorized_access', models.CharField(default='Accès non autorisé')),
                ('w_the_pong', models.CharField(default='LE PONG')),
                ('w_ball_color_change', models.CharField(default='Changement de couleur de la balle')),
                ('w_manage_tournament', models.CharField(default='Gérer un Tournoi')),
                ('w_loading', models.CharField(default='Chargement...')),
                ('w_back_to_profile', models.CharField(default='Retour au profil')),
                ('w_submit', models.CharField(default='Soumettre')),
                ('w_on', models.CharField(default='Oui')),
                ('w_off', models.CharField(default='Non')),
                ('w_toggle_tfa', models.CharField(default='Activer 2FA')),
                ('w_tfa_message', models.CharField(default="Utilisez votre appli d'authentification Google, scannez le code QR et conservez le code ci-dessous en cas de perte d'accès à l'appli")),
                ('w_insert_code', models.CharField(default='Insérez le code')),
                ('w_email', models.CharField(default='Email')),
                ('w_username', models.CharField(default="Nom d'utilisateur")),
                ('w_cancel_friend_request', models.CharField(default="Annuler la demande d'ami")),
                ('w_accept_friend_request', models.CharField(default="Accepter la demande d'ami")),
                ('w_send_friend_request', models.CharField(default="Envoyer une demande d'ami")),
                ('w_cancel', models.CharField(default='Décliner')),
                ('w_accept', models.CharField(default='Accepter')),
                ('w_friends', models.CharField(default='Amis')),
                ('w_unfriend', models.CharField(default='Enlever ami')),
                ('w_find', models.CharField(default='Inviter')),
                ('w_search_friend', models.CharField(default="Envoyer demande d'ami")),
                ('w_friend_requests', models.CharField(default="Demandes d'ami")),
                ('w_match_history', models.CharField(default='Historique des matchs')),
                ('w_date', models.CharField(default='Date')),
                ('w_player', models.CharField(default='Joueur')),
                ('w_winner', models.CharField(default='Gagnant')),
                ('w_loser', models.CharField(default='Perdant')),
                ('w_wins', models.CharField(default='Victoires')),
                ('w_loses', models.CharField(default='Défaites')),
                ('w_no_games', models.CharField(default='Pas de parties')),
                ('w_tournament', models.CharField(default='Tournoi')),
                ('w_tournament_create', models.CharField(default='Créer')),
                ('w_tournament_join', models.CharField(default='Rejoindre')),
                ('w_tournament_participants', models.CharField(default='Nombre de participants')),
                ('w_tournament_pass', models.CharField(default='Mot de passe du tournoi')),
                ('w_tournament_host', models.CharField(default='Hôte')),
                ('w_tournament_players', models.CharField(default='Joueurs')),
                ('w_tournament_action', models.CharField(default='Action')),
                ('w_tournament_launch', models.CharField(default='Lancer tournoi')),
                ('w_tournament_warning', models.CharField(default='Le nombre de participants doit être une puissance de 2 et supérieur à 3')),
                ('w_game_manager', models.CharField(default='Gestion de la partie')),
                ('w_tournament_manager', models.CharField(default='Gestion du tournoi')),
                ('w_search_player', models.CharField(default='Chercher un joueur')),
                ('w_request_sent', models.CharField(default='Requête envoyée')),
                ('w_error', models.CharField(default="Erreur dans l'invitation")),
                ('w_no_friends', models.CharField(default="Pas d'amis")),
                ('w_no_results', models.CharField(default='Aucun résultat')),
            ],
        ),
        migrations.CreateModel(
            name='Russian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_home', models.CharField(default='Главная страница')),
                ('w_profile', models.CharField(default='Профил')),
                ('w_playGame', models.CharField(default='Играть в игру')),
                ('w_login', models.CharField(default='Войти')),
                ('w_login2', models.CharField(default='Вход')),
                ('w_logout', models.CharField(default='Отключиться')),
                ('w_pongDesc', models.CharField(default='Оригинальный понг, но не на столько.')),
                ('w_register', models.CharField(default='Регистрация')),
                ('w_account', models.CharField(default='Уже есть аккаунт?')),
                ('w_noaccount', models.CharField(default='Нет аккаунта? Создайте тут')),
                ('w_otp_placeholder', models.CharField(default='Введите секретный код если необходимо')),
                ('w_profile_settings', models.CharField(default='Настройки профиля')),
                ('w_account_settings', models.CharField(default='Настройки аккаунта')),
                ('w_title', models.CharField(default='СУПЕР ПОНГ')),
                ('w_forbidden_request', models.CharField(default='Хапрещенный запрос')),
                ('w_unauthorized_access', models.CharField(default='Несанкционированный доступ')),
                ('w_the_pong', models.CharField(default='ПОНГ')),
                ('w_ball_color_change', models.CharField(default='Изменение цвета шарика')),
                ('w_manage_tournament', models.CharField(default='Провести Турнир')),
                ('w_loading', models.CharField(default='Загрузка...')),
                ('w_back_to_profile', models.CharField(default='Вернуться к профилю')),
                ('w_submit', models.CharField(default='Подать')),
                ('w_on', models.CharField(default='Да')),
                ('w_off', models.CharField(default='Нет')),
                ('w_toggle_tfa', models.CharField(default='Активировать 2FA')),
                ('w_tfa_message', models.CharField(default='Используйте свое приложение для аутентификации Google, отсканируйте QR-код и сохраните приведенный ниже код на случай потери доступа к приложению')),
                ('w_insert_code', models.CharField(default='Введите код')),
                ('w_email', models.CharField(default='Мэйл')),
                ('w_username', models.CharField(default='Имя пользователя')),
                ('w_cancel_friend_request', models.CharField(default='Отменить запрос в друзья')),
                ('w_accept_friend_request', models.CharField(default='Принять запрос в друзья')),
                ('w_send_friend_request', models.CharField(default='Отправить запрос в друзья')),
                ('w_cancel', models.CharField(default='Отклонить')),
                ('w_accept', models.CharField(default='Принять')),
                ('w_friends', models.CharField(default='Друзья')),
                ('w_unfriend', models.CharField(default='Убрать с друзьях')),
                ('w_find', models.CharField(default='Пригласить')),
                ('w_search_friend', models.CharField(default='Пригласить в друзья')),
                ('w_friend_requests', models.CharField(default='Запросы в друзья')),
                ('w_match_history', models.CharField(default='История матчей')),
                ('w_date', models.CharField(default='Дата')),
                ('w_player', models.CharField(default='Игрок')),
                ('w_winner', models.CharField(default='Победитель')),
                ('w_loser', models.CharField(default='Проигравший')),
                ('w_wins', models.CharField(default='Победы')),
                ('w_loses', models.CharField(default='Потери')),
                ('w_no_games', models.CharField(default='Нет игр')),
                ('w_tournament', models.CharField(default='Турнир')),
                ('w_tournament_create', models.CharField(default='Создать')),
                ('w_tournament_join', models.CharField(default='Присоединиться')),
                ('w_tournament_participants', models.CharField(default='Количество игроков')),
                ('w_tournament_pass', models.CharField(default='Пароль турнина')),
                ('w_tournament_host', models.CharField(default='Хозяйн')),
                ('w_tournament_players', models.CharField(default='Игроки')),
                ('w_tournament_action', models.CharField(default='Действия')),
                ('w_tournament_launch', models.CharField(default='Запустить')),
                ('w_tournament_warning', models.CharField(default='Количество участников должно быть в степени 2 и превышать 3')),
                ('w_game_manager', models.CharField(default='Управление игры')),
                ('w_tournament_manager', models.CharField(default='Управление турнира')),
                ('w_search_player', models.CharField(default='Искать игрока')),
                ('w_request_sent', models.CharField(default='Отправленный запрос')),
                ('w_error', models.CharField(default='Ошибка запроса')),
                ('w_no_friends', models.CharField(default='Нет друзей')),
                ('w_no_results', models.CharField(default='Запросов нет')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_id', models.CharField(editable=False, max_length=12, null=True, unique=True)),
                ('size', models.IntegerField()),
                ('password', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'active'), ('completed', 'completed')], default='active', max_length=10)),
                ('host_player', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='hosted_tournaments', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(related_name='tournaments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.tournament')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
